#!/usr/bin/env bash
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

declare PLUGIN_PATH="$PLUGIN_AVAILABLE_PATH/githook"
declare webhookId=""

removeHook() {
	declare desc="Removes an existing webhook from local data and github"
	declare cmd="githook:hook-remove"

	# Moves the input down by one so $1 will be the parameters after $cmd
	[[ $1 == $cmd ]] && shift 1

	# The command format is $cmd $webhook
	declare webhook=$1

	# Make hook data operations available
	source "$PLUGIN_PATH/data-operations/hooks"

	# Checks if webhook exist, if so then assign the webhookId to
	# a variable called "retrieveWebhookId"
	if getHookId $webhook
	then
		removeGithubHook $retrieveWebhookId $retrieveRepository
		removeHook $webhook
		echo "Successfully removed webhook \"$webhook\""
	else
		echo "err: given hook does not exist"
	fi
}

removeGithubHook() {
	declare webhookId=$1
	declare repository=$2

	# Makes a request to github for removing webhook
	# Running this assumes GITHUB_USERNAME and GITHUB_TOKEN
	# is available in the environment variables
	declare response=$(curl \
	-sS \
	-X DELETE \
	-u "$GITHUB_USERNAME:$GITHUB_TOKEN" \
	-H "Accept: application/vnd.github.v3+json" \
	"https://api.github.com/repos/$repository/hooks/$webhookId")

	echo $response
	if [[ -v $response ]]
	then
		echo "there is no response"
	fi
}

removeHook "$@"